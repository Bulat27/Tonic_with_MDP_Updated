import subprocess
import os

def get_total_edges(exact_output_path):
    """
    Reads the output of RunExactAlgo and extracts the total number of edges.

    Args:
        exact_output_path (str): Path to the output file generated by the exact algorithm

    Returns:
        int: Total number of edges as written in the output file
    """
    with open(exact_output_path, "r") as f:
        lines = f.readlines()
    last_line = lines[-2].strip().split()
    return int(last_line[-1])

def run_exact_algorithm(file_exact, dataset_path, output_exact):
    """
    Runs the exact triangle counting algorithm and extracts the number of edges.

    Args:
        file_exact (str): Path to the executable or script running the exact algorithm
        dataset_path (str): Path to the dataset input file
        output_exact (str): Path to the file where output should be written

    Returns:
        int: Total number of edges counted by the exact algorithm
    """
    subprocess.run([file_exact, "0", dataset_path, output_exact], check=True)
    return get_total_edges(output_exact)

def read_top_k_lines(file_path, k):
    with open(file_path, 'r') as f:
        return [next(f) for _ in range(k)]

def clean_auxiliary_files(output_folder):
    """
    Removes all auxiliary files containing 'seed' in their filenames from a folder.
    This is used to delete the auxiliary files produced during the MDUpdated (Tonic with USS) execution.

    Args:
        output_folder (str): Path to the folder where auxiliary files should be removed
    """
    for filename in os.listdir(output_folder):
        if 'seed' in filename:
            filepath = os.path.join(output_folder, filename)
            os.remove(filepath)